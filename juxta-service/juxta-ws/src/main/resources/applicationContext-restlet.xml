<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
                        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">    

    <!-- main restlet component: defines port, protocol and router that
         maps RESTful uris to java services for handling those requests -->
    <bean id="top" class="org.restlet.ext.spring.SpringComponent">
        <property name="server">
            <bean class="org.restlet.ext.spring.SpringServer">
                <constructor-arg value="http" />
                <constructor-arg value="${juxta.ws.port}" />
            </bean>
        </property>

        <property name="defaultTarget" ref="juxtaWsAppliction" />
        
        <!-- add support for class loader access protocol. This is needed to
             serve static content from the classpath (ftl resources). Also add support
             for normal static content. -->
        <property name="clientsList">
            <list>
                <value>clap</value>
                <value>file</value>
            </list>
         </property>
    </bean>        
    
    <!-- The restlet application class for the juxta web service -->
    <bean id="juxtaWsAppliction" class="org.juxtasoftware.JuxtaWsApplication">
        <property name="router" ref="juxtaRouter"/>
        <property name="requestFilter" ref="filter" />
        <property name="statusService" ref="statusService" />
    </bean>
  
    <!-- The filter forwards all of its requests off to the router -->
    <bean id="filter" class="org.juxtasoftware.RequestFilter">
    </bean>
    
    <!-- The status service for displaying customized error pages-->
    <bean id="statusService" class="org.juxtasoftware.JuxtaStatusService"/>
    
    <!-- Metrics resource -->
    <bean name="/juxta/metrics" class="org.juxtasoftware.resource.MetricsResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{workspace}/metrics" class="org.juxtasoftware.resource.MetricsResource" scope="prototype" autowire="byName" />
        
    <!-- This defines all of the RESTful mappings for the juxtaWS -->
    <bean id="juxtaRouter" class="org.restlet.ext.spring.SpringBeanRouter"/>
    <bean name="/juxta" class="org.juxtasoftware.resource.RootResource" scope="prototype" autowire="byName" />
    
     <!-- QNAmes resources -->
    <bean name="/juxta/qnames" class="org.juxtasoftware.resource.QNamesResource" scope="prototype" autowire="byName" />
    
    <!-- workspace resources -->
    <bean name="/juxta/workspace" class="org.juxtasoftware.resource.WorkspacesResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/workspace/{name}" class="org.juxtasoftware.resource.WorkspaceResource" scope="prototype" autowire="byName" />
    
    <!-- import -->
    <bean name="/juxta/{workspace}/import" class="org.juxtasoftware.resource.Importer" scope="prototype" autowire="byName" />
    <bean name="/juxta/import" class="org.juxtasoftware.resource.Importer" scope="prototype" autowire="byName" />
    
    <!-- info resource -->
    <bean name="/juxta/{type}/{id}/info" class="org.juxtasoftware.resource.InfoResource" scope="prototype" autowire="byName" />
    
    <!-- exist resources -->
    <bean name="/juxta/{workspace}/{type}/exist" class="org.juxtasoftware.resource.ExistResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{type}/exist" class="org.juxtasoftware.resource.ExistResource" scope="prototype" autowire="byName" />
    
    <!-- Searching -->
    <bean name="/juxta/{workspace}/search" class="org.juxtasoftware.resource.Searcher" scope="prototype" autowire="byName" />
    <bean name="/juxta/search" class="org.juxtasoftware.resource.Searcher" scope="prototype" autowire="byName" />
    
    <!-- task resources -->
    <bean name="/juxta/{workspace}/task/{id}/status" class="org.juxtasoftware.resource.TaskResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{workspace}/task/{id}/cancel" class="org.juxtasoftware.resource.TaskResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/task/{id}/status" class="org.juxtasoftware.resource.TaskResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/task/{id}/cancel" class="org.juxtasoftware.resource.TaskResource" scope="prototype" autowire="byName" />
      
    <!-- source resources -->
    <bean name="/juxta/{workspace}/source" class="org.juxtasoftware.resource.SourcesResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{workspace}/source/delete" class="org.juxtasoftware.resource.SourcesResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{workspace}/source/{id}" class="org.juxtasoftware.resource.SourceResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/source" class="org.juxtasoftware.resource.SourcesResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/source/delete" class="org.juxtasoftware.resource.SourcesResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/source/{id}" class="org.juxtasoftware.resource.SourceResource" scope="prototype" autowire="byName" />
    
    <!-- usage resources -->
    <bean name="/juxta/{workspace}/{type}/{id}/usage" class="org.juxtasoftware.resource.UsageResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{type}/{id}/usage" class="org.juxtasoftware.resource.UsageResource" scope="prototype" autowire="byName" />

    <!-- XSLT resources -->
    <bean name="/juxta/{workspace}/xslt" class="org.juxtasoftware.resource.XsltResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{workspace}/xslt/template" class="org.juxtasoftware.resource.XsltResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{workspace}/xslt/{xsltId}" class="org.juxtasoftware.resource.XsltResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{workspace}/witness/{id}/xslt" class="org.juxtasoftware.resource.XsltResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/xslt" class="org.juxtasoftware.resource.XsltResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/xslt/template" class="org.juxtasoftware.resource.XsltResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/xslt/{xsltId}" class="org.juxtasoftware.resource.XsltResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/witness/{id}/xslt" class="org.juxtasoftware.resource.XsltResource" scope="prototype" autowire="byName" />
    
    <!-- transform -->
    <bean name="/juxta/{workspace}/transform" class="org.juxtasoftware.resource.Transformer" scope="prototype" autowire="byName" />
    <bean name="/juxta/transform" class="org.juxtasoftware.resource.Transformer" scope="prototype" autowire="byName" />

    <!-- witness resources -->
    <bean name="/juxta/{workspace}/witness/delete" class="org.juxtasoftware.resource.WitnessesResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{workspace}/witness/copy_settings" class="org.juxtasoftware.resource.WitnessesResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{workspace}/witness" class="org.juxtasoftware.resource.WitnessesResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{workspace}/witness/{witnessId}" class="org.juxtasoftware.resource.WitnessResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/witness/delete" class="org.juxtasoftware.resource.WitnessesResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/witness/copy_settings" class="org.juxtasoftware.resource.WitnessesResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/witness" class="org.juxtasoftware.resource.WitnessesResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/witness/{witnessId}" class="org.juxtasoftware.resource.WitnessResource" scope="prototype" autowire="byName" />
    
    <!-- filters -->
    <bean name="/juxta/{workspace}/filter" class="org.juxtasoftware.resource.QNameFiltersResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{workspace}/filter/{id}" class="org.juxtasoftware.resource.QNameFilterResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/filter" class="org.juxtasoftware.resource.QNameFiltersResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/filter/{id}" class="org.juxtasoftware.resource.QNameFilterResource" scope="prototype" autowire="byName" />
    
    <!-- edition builder -->
    <bean name="/juxta/set/{id}/edition" class="org.juxtasoftware.resource.EditionBuilderResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{workspace}/set/{id}/edition" class="org.juxtasoftware.resource.EditionBuilderResource" scope="prototype" autowire="byName" />

    <!-- comparison set -->
    <bean name="/juxta/{workspace}/set/delete" class="org.juxtasoftware.resource.ComparisonSetsResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{workspace}/set" class="org.juxtasoftware.resource.ComparisonSetsResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{workspace}/set/{id}" class="org.juxtasoftware.resource.ComparisonSetResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{workspace}/set/{id}/add" class="org.juxtasoftware.resource.ComparisonSetResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{workspace}/set/{id}/delete" class="org.juxtasoftware.resource.ComparisonSetResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/set/delete" class="org.juxtasoftware.resource.ComparisonSetsResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/set" class="org.juxtasoftware.resource.ComparisonSetsResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/set/{id}" class="org.juxtasoftware.resource.ComparisonSetResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/set/{id}/add" class="org.juxtasoftware.resource.ComparisonSetResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/set/{id}/delete" class="org.juxtasoftware.resource.ComparisonSetResource" scope="prototype" autowire="byName" />
    
    <!-- comparison set user annotations -->
    <bean name="/juxta/{workspace}/set/{id}/annotation" class="org.juxtasoftware.resource.UserAnnotationResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/set/{id}/annotation" class="org.juxtasoftware.resource.UserAnnotationResource" scope="prototype" autowire="byName" />
    
    <!-- export -->
    <bean name="/juxta/{workspace}/set/{id}/export" class="org.juxtasoftware.resource.Exporter" scope="prototype" autowire="byName" />
    <bean name="/juxta/set/{id}/export" class="org.juxtasoftware.resource.Exporter" scope="prototype" autowire="byName" />
    
    <!-- tokenizer -->
    <bean name="/juxta/{workspace}/set/{id}/tokenize" class="org.juxtasoftware.resource.TokenizerResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/set/{id}/tokenize" class="org.juxtasoftware.resource.TokenizerResource" scope="prototype" autowire="byName" />
    
    <!-- collator -->
    <bean name="/juxta/{workspace}/set/{id}/collate" class="org.juxtasoftware.resource.CollatorResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{workspace}/set/{id}/collator" class="org.juxtasoftware.resource.CollatorResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/set/{id}/collate" class="org.juxtasoftware.resource.CollatorResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/set/{id}/collator" class="org.juxtasoftware.resource.CollatorResource" scope="prototype" autowire="byName" />
    
    <!-- fragments -->
    <bean name="/juxta/{workspace}/set/{id}/diff/fragment" class="org.juxtasoftware.resource.FragmentResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/set/{id}/diff/fragment" class="org.juxtasoftware.resource.FragmentResource" scope="prototype" autowire="byName" />
    
    <!-- views -->
    <bean name="/juxta/{workspace}/set/{id}/view" class="org.juxtasoftware.resource.SetViewResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/set/{id}/view" class="org.juxtasoftware.resource.SetViewResource" scope="prototype" autowire="byName" />

    <!-- annotations -->
    <bean name="/juxta/{workspace}/set/{setId}/witness/{witnessId}/annotation" class="org.juxtasoftware.resource.AnnotationsResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{workspace}/set/{setId}/witness/{witnessId}/annotation/{annotationId}" class="org.juxtasoftware.resource.AnnotationResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/set/{setId}/witness/{witnessId}/annotation" class="org.juxtasoftware.resource.AnnotationsResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/set/{setId}/witness/{witnessId}/annotation/{annotationId}" class="org.juxtasoftware.resource.AnnotationResource" scope="prototype" autowire="byName" />

    <!-- alignments -->
    <bean name="/juxta/{workspace}/set/{setId}/alignment" class="org.juxtasoftware.resource.AlignmentsResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/{workspace}/set/{setId}/alignment/{id}" class="org.juxtasoftware.resource.AlignmentResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/set/{setId}/alignment" class="org.juxtasoftware.resource.AlignmentsResource" scope="prototype" autowire="byName" />
    <bean name="/juxta/set/{setId}/alignment/{id}" class="org.juxtasoftware.resource.AlignmentResource" scope="prototype" autowire="byName" />
               
</beans>